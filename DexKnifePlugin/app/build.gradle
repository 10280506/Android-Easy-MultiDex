apply plugin: 'com.android.application'
apply plugin: 'dexknifePlus'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VER)
    buildToolsVersion project.BUILD_TOOLS_VER

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK_VER)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
    }

    productFlavors{
        dev{

        }

        mock{

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude ".readme"
    }
}

dexKnife{
    //必选参数
    enabled true //if false,禁用分包插件
    //可选参数
    //1.如果没有可选参数，将根据enabled决定是否分包。
    //2.如果有可选参数，需满足必选参数和可选参数的条件才允许分包
    productFlavor 'mock'
    buildType 'debug'

    /*
    *eg:当前productFlavors = dev，buildType = debug，
    *参数组合1：enabled = true，productFlavor = dev，buildType = debug 分包
    *参数组合2：enabled = true，productFlavor = mock，buildType = debug 不分包
    *参数组合1：enabled = true，buildType = debug 所有buildType = debug分包
    *参数组合1：enabled = true，productFlavor = dev 所有productFlavor = dev分包
    * */
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    compile "io.reactivex:rxjava:${RX_JAVA}"
    compile "io.reactivex:rxandroid:${RX_ANDROID}"
    compile 'com.android.support:multidex:1.0.1'
}